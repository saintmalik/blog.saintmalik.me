name: Deploy to Netlify on commits to master
on:

#     workflow_dispatch:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if there are any changes made in bgimg
        id: changed-files-specific
        uses: tj-actions/changed-files@v42
        with:
          files: |
            static/bgimg/**

      - name: Setup cwebp
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          pwd
          sudo apt-get install libjpeg-dev libpng-dev libtiff-dev libgif-dev
          wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.2.4-linux-x86-64.tar.gz
          tar xzvf libwebp-1.2.4-linux-x86-64.tar.gz
          cd libwebp-1.2.4-linux-x86-64/bin
          mv cwebp ${{ github.workspace }}
          cd ../..
          rm -rf libwebp-1.2.4-linux-x86-64
          rm -rf libwebp-1.2.4-linux-x86-64.tar.gz
          sudo mv cwebp /bin
          ls

      - name: bash file to create the webp version of the images
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
         bash webp.sh /static/bgimg/

      - name: push the webp images to the folder
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        env:
          CI_COMMIT_MESSAGE: CI to buid webp version of the image
          CI_COMMIT_AUTHOR: Webp Image CI Bot
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "saintmalik@users.noreply.github.com"
          git add .
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push

      - name: Clear Cloudflare Cache
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/${{ secrets.CLOUDFLARE_ZONE_ID }}/purge_cache" \
               -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
               -H "Content-Type: application/json" \
               --data '{"purge_everything":true}'
  # push:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     # Checkout repo
  #     - uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Build site
  #       run: npm run build

  #     # Deploy the site with netlify-cli
  #     - name: Deploy Site
  #       env:
  #         NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
  #         NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
  #       run: netlify deploy --dir=build --prod

